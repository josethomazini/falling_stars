{"version":3,"sources":["webpack:///./src/style.css?7163","webpack:///./src/core/Consts.js","webpack:///./src/preload/AssetsLoader.js","webpack:///./src/preload/AssetText.js","webpack:///./src/preload/LoadingText.js","webpack:///./src/preload/PercentText.js","webpack:///./src/preload/ProgressBar.js","webpack:///./src/preload/ProgressBox.js","webpack:///./src/preload/EventHandler.js","webpack:///./src/preload/PreloadScene.js","webpack:///./src/stage/Background.js","webpack:///./src/stage/BombSpawner.js","webpack:///./src/core/GameState.js","webpack:///./src/stage/CollisionRules.js","webpack:///./src/stage/DudeAnimations.js","webpack:///./src/stage/Dude.js","webpack:///./src/stage/PlatformGroup.js","webpack:///./src/stage/PlayerControl.js","webpack:///./src/stage/ScoreLabel.js","webpack:///./src/stage/StarGroup.js","webpack:///./src/stage/StageScene.js","webpack:///./src/index.js","webpack:///./src/style.css"],"names":["keys","anims","AssetsLoader","scene","load","image","sky","platform","star","bomb","spritesheet","dude","frameWidth","frameHeight","AssertText","cameras","main","width","height","this","text","make","x","y","style","font","fill","setOrigin","file","setText","key","destroy","LoadingText","PercentText","value","parseInt","ProgressBar","bar","add","graphics","clear","fillStyle","fillRect","ProgressBox","box","EventHandler","progressBar","progressBox","loadingText","percentText","assetText","on","progressed","fileProgressed","completed","PreloadScene","start","Phaser","Background","BombSpawner","group","physics","playerX","create","setBounce","setCollideWorldBounds","setVelocity","gameOver","CollisionRules","platforms","stars","bombSpawner","scoreLabel","collider","hitBomb","overlap","collectStar","player","pause","setTint","play","GameState","disableBody","countActive","children","iterate","child","enableBody","spawn","DudeAnimations","frames","generateFrameNumbers","end","frameRate","repeat","frame","Dude","existing","PlatformGroup","staticGroup","setScale","refreshBody","PlayerControl","cursors","input","keyboard","createCursorKeys","restart","left","isDown","moveLeft","right","moveRight","idle","up","body","touching","down","jump","setVelocityX","setVelocityY","ScoreLabel","fontSize","setScore","points","StarGroup","setXY","stepX","setBounceY","StageScene","playerControl","update","config","type","default","arcade","gravity","___CSS_LOADER_EXPORT___","push","module","id"],"mappings":"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","file":"index.d48c61342f525b93880f.js","sourcesContent":["import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","export const keys = {\n  sky: 'sky',\n  platform: 'platform',\n  star: 'star',\n  bomb: 'bomb',\n  dude: 'dude',\n};\n\nexport const anims = {\n  left: 'left',\n  right: 'right',\n  idle: 'idle',\n};\n","import { keys } from '../core/Consts';\n\nimport sky from './assets/sky.png';\nimport platform from './assets/platform.png';\nimport star from './assets/star.png';\nimport bomb from './assets/bomb.png';\nimport dude from './assets/dude.png';\n\nexport default class AssetsLoader {\n  constructor(scene) {\n    scene.load.image(keys.sky, sky);\n    scene.load.image(keys.platform, platform);\n    scene.load.image(keys.star, star);\n    scene.load.image(keys.bomb, bomb);\n\n    scene.load.spritesheet(\n      keys.dude, dude,\n      {\n        frameWidth: 32,\n        frameHeight: 48,\n      },\n    );\n  }\n}\n","export default class AssertText {\n  constructor(scene) {\n    const { width, height } = scene.cameras.main;\n\n    this.text = scene.make.text({\n      x: width / 2,\n      y: height / 2 + 50,\n      text: '',\n      style: {\n        font: '18px monospace',\n        fill: '#ffffff',\n      },\n    });\n\n    this.text.setOrigin(0.5, 0.5);\n  }\n\n  fileProgressed(file) {\n    this.text.setText(`Loading asset: ${file.key}`);\n  }\n\n  completed() {\n    this.text.destroy();\n  }\n}\n","export default class LoadingText {\n  constructor(scene) {\n    const { width, height } = scene.cameras.main;\n\n    this.text = scene.make.text({\n      x: width / 2,\n      y: height / 2 - 50,\n      text: 'Loading...',\n      style: {\n        font: '20px monospace',\n        fill: '#ffffff',\n      },\n    });\n    this.text.setOrigin(0.5, 0.5);\n  }\n\n  completed() {\n    this.text.destroy();\n  }\n}\n","export default class PercentText {\n  constructor(scene) {\n    const { width, height } = scene.cameras.main;\n\n    this.text = scene.make.text({\n      x: width / 2,\n      y: height / 2 - 5,\n      text: '0%',\n      style: {\n        font: '18px monospace',\n        fill: '#ffffff',\n      },\n    });\n    this.text.setOrigin(0.5, 0.5);\n  }\n\n  progressed(value) {\n    this.text.setText(`${parseInt(value * 100, 10)}%`);\n  }\n\n  completed() {\n    this.text.destroy();\n  }\n}\n","export default class ProgressBar {\n  constructor(scene) {\n    this.bar = scene.add.graphics();\n  }\n\n  progressed(value) {\n    this.bar.clear();\n    this.bar.fillStyle(0xffffff, 1);\n    this.bar.fillRect(250, 280, 300 * value, 30);\n  }\n\n  completed() {\n    this.bar.destroy();\n  }\n}\n","export default class ProgressBox {\n  constructor(scene) {\n    this.box = scene.add.graphics();\n    this.box.fillStyle(0x222222, 0.8);\n    this.box.fillRect(240, 270, 320, 50);\n  }\n\n  completed() {\n    this.box.destroy();\n  }\n}\n","import AssertText from './AssetText';\nimport LoadingText from './LoadingText';\nimport PercentText from './PercentText';\nimport ProgressBar from './ProgressBar';\nimport ProgressBox from './ProgressBox';\n\nexport default class EventHandler {\n  constructor(scene) {\n    const progressBar = new ProgressBar(scene);\n    const progressBox = new ProgressBox(scene);\n    const loadingText = new LoadingText(scene);\n    const percentText = new PercentText(scene);\n    const assetText = new AssertText(scene);\n\n    scene.load.on('progress', (value) => {\n      percentText.progressed(value);\n      progressBar.progressed(value);\n    });\n\n    scene.load.on('fileprogress', (file) => {\n      assetText.fileProgressed(file);\n    });\n\n    scene.load.on('complete', () => {\n      progressBar.completed();\n      progressBox.completed();\n      loadingText.completed();\n      percentText.completed();\n      assetText.completed();\n    });\n  }\n}\n","import Phaser from 'phaser';\n\nimport AssetsLoader from './AssetsLoader';\nimport EventHandler from './EventHandler';\n\nexport default class PreloadScene extends Phaser.Scene {\n  constructor() {\n    super('PreloadScene');\n  }\n\n  preload() {\n    new EventHandler(this);\n    new AssetsLoader(this);\n  }\n\n  create() {\n    this.scene.start('StageScene');\n  }\n}\n","import { keys } from '../core/Consts';\n\nexport default class Background {\n  constructor(scene) {\n    scene.add.image(400, 300, keys.sky);\n  }\n}\n","import Phaser from 'phaser';\n\nimport { keys } from '../core/Consts';\n\nexport default class BombSpawner {\n  constructor(scene) {\n    this.group = scene.physics.add.group();\n  }\n\n  spawn(playerX) {\n    const x = (playerX < 400)\n      ? Phaser.Math.Between(400, 800)\n      : Phaser.Math.Between(0, 400);\n\n    const bomb = this.group.create(x, 16, keys.bomb);\n    bomb.setBounce(1);\n    bomb.setCollideWorldBounds(true);\n    bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\n  }\n}\n","export default {\n  gameOver: false,\n};\n","import GameState from '../core/GameState';\nimport { anims } from '../core/Consts';\n\nexport default class CollisionRules {\n  constructor(scene, dude, platforms, stars, bombSpawner, scoreLabel) {\n    this.bombSpawner = bombSpawner;\n    this.scoreLabel = scoreLabel;\n    this.stars = stars;\n    this.scene = scene;\n\n    this.scene.physics.add.collider(dude, platforms.group);\n    this.scene.physics.add.collider(this.stars.group, platforms.group);\n    this.scene.physics.add.collider(bombSpawner.group, platforms.group);\n\n    this.scene.physics.add.collider(\n      dude, this.bombSpawner.group, this.hitBomb, null, this,\n    );\n\n    this.scene.physics.add.overlap(\n      dude, stars.group, this.collectStar, null, this,\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  hitBomb(player, bomb) {\n    this.scene.physics.pause();\n\n    player.setTint(0xff0000);\n\n    player.anims.play(anims.idle);\n\n    GameState.gameOver = true;\n  }\n\n  collectStar(player, star) {\n    star.disableBody(true, true);\n    this.scoreLabel.add(10);\n\n    if (this.stars.group.countActive(true) === 0) {\n      //  A new batch of stars to collect\n      this.stars.group.children.iterate((child) => {\n        child.enableBody(true, child.x, 0, true, true);\n      });\n    }\n\n    this.bombSpawner.spawn(player.x);\n  }\n}\n","import { keys, anims } from '../core/Consts';\n\nexport default class DudeAnimations {\n  constructor(scene) {\n    scene.anims.create({\n      key: anims.left,\n      frames: scene.anims.generateFrameNumbers(\n        keys.dude, { start: 0, end: 3 },\n      ),\n      frameRate: 10,\n      repeat: -1,\n    });\n\n    scene.anims.create({\n      key: anims.idle,\n      frames: [{ key: keys.dude, frame: 4 }],\n      frameRate: 20,\n    });\n\n    scene.anims.create({\n      key: anims.right,\n      frames: scene.anims.generateFrameNumbers(\n        keys.dude, { start: 5, end: 8 },\n      ),\n      frameRate: 10,\n      repeat: -1,\n    });\n  }\n}\n","import Phaser from 'phaser';\n\nimport DudeAnimations from './DudeAnimations';\nimport { keys } from '../core/Consts';\n\nexport default class Dude extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene) {\n    super(scene, 100, 450, keys.dude);\n\n    scene.add.existing(this);\n    scene.physics.add.existing(this);\n\n    this.setBounce(0.2);\n    this.setCollideWorldBounds(true);\n\n    new DudeAnimations(scene);\n  }\n}\n","import { keys } from '../core/Consts';\n\nexport default class PlatformGroup {\n  constructor(scene) {\n    this.group = scene.physics.add.staticGroup();\n\n    this.group.create(400, 568, keys.platform).setScale(2).refreshBody();\n\n    this.group.create(600, 400, keys.platform);\n    this.group.create(50, 250, keys.platform);\n    this.group.create(750, 220, keys.platform);\n  }\n}\n","import GameState from '../core/GameState';\nimport { anims } from '../core/Consts';\n\nexport default class PlayerControl {\n  constructor(scene, dude) {\n    this.scene = scene;\n    this.dude = dude;\n\n    this.cursors = scene.input.keyboard.createCursorKeys();\n    this.scene.input.keyboard.on('keydown-SPACE', this.restart, this);\n  }\n\n  update() {\n    if (this.cursors.left.isDown) {\n      this.moveLeft();\n    } else if (this.cursors.right.isDown) {\n      this.moveRight();\n    } else {\n      this.idle();\n    }\n    if (this.cursors.up.isDown && this.dude.body.touching.down) {\n      this.jump();\n    }\n  }\n\n  restart() {\n    if (GameState.gameOver) {\n      this.scene.scene.start('StageScene');\n    }\n  }\n\n  moveLeft() {\n    this.dude.setVelocityX(-160);\n    this.dude.anims.play(anims.left, true);\n  }\n\n  moveRight() {\n    this.dude.setVelocityX(160);\n    this.dude.anims.play(anims.right, true);\n  }\n\n  jump() {\n    this.dude.setVelocityY(-330);\n  }\n\n  idle() {\n    this.dude.setVelocityX(0);\n    this.dude.anims.play(anims.idle);\n  }\n}\n","export default class ScoreLabel {\n  constructor(scene, x, y, value) {\n    const style = { fontSize: '32px', fill: '#000' };\n\n    this.text = scene.make.text({\n      x, y, text: '', style,\n    });\n\n    this.setScore(value);\n  }\n\n  setScore(value) {\n    this.value = value;\n    this.text.setText(`Score: ${this.value}`);\n  }\n\n  add(points) {\n    this.setScore(this.value + points);\n  }\n}\n","import Phaser from 'phaser';\n\nimport { keys } from '../core/Consts';\n\nexport default class StarGroup {\n  constructor(scene) {\n    this.group = scene.physics.add.group({\n      key: keys.star,\n      repeat: 11,\n      setXY: { x: 12, y: 0, stepX: 70 },\n    });\n\n    this.group.children.iterate((child) => {\n      child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n    });\n  }\n}\n","import Phaser from 'phaser';\n\nimport Background from './Background';\nimport BombSpawner from './BombSpawner';\nimport CollisionRules from './CollisionRules';\nimport Dude from './Dude';\nimport GameState from '../core/GameState';\nimport PlatformGroup from './PlatformGroup';\nimport PlayerControl from './PlayerControl';\nimport ScoreLabel from './ScoreLabel';\nimport StarGroup from './StarGroup';\n\nexport default class StageScene extends Phaser.Scene {\n  constructor() {\n    super('StageScene');\n  }\n\n  create() {\n    GameState.gameOver = false;\n\n    new Background(this);\n\n    const dude = new Dude(this);\n    const platforms = new PlatformGroup(this);\n    const stars = new StarGroup(this);\n    const bombSpawner = new BombSpawner(this);\n    const scoreLabel = new ScoreLabel(this, 16, 16, 0);\n\n    this.playerControl = new PlayerControl(this, dude);\n    new CollisionRules(this, dude, platforms, stars, bombSpawner, scoreLabel);\n  }\n\n  update() {\n    if (GameState.gameOver) {\n      return;\n    }\n\n    this.playerControl.update();\n  }\n}\n","import Phaser from 'phaser';\n\nimport './style.css';\n\nimport PreloadScene from './preload/PreloadScene';\nimport StageScene from './stage/StageScene';\n\nconst config = {\n  type: Phaser.CANVAS,\n  width: 800,\n  height: 600,\n  physics: {\n    default: 'arcade',\n    arcade: {\n      // debug: true,\n      gravity: {\n        y: 300,\n      },\n    },\n  },\n  scene: [\n    PreloadScene,\n    StageScene,\n  ],\n};\n\nexport default new Phaser.Game(config);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* @font-face {\\n  font-family: 'MyFont';\\n  src: url('./my-font.woff2') format('woff2'),\\n    url('./my-font.woff') format('woff');\\n  font-weight: 600;\\n  font-style: normal;\\n} */\\n\\nbody {\\n  /* font-family: 'MyFont'; */\\n  margin: 0;\\n  background: #333;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;GAMG;;AAEH;EACE,2BAA2B;EAC3B,SAAS;EACT,gBAAgB;AAClB\",\"sourcesContent\":[\"/* @font-face {\\n  font-family: 'MyFont';\\n  src: url('./my-font.woff2') format('woff2'),\\n    url('./my-font.woff') format('woff');\\n  font-weight: 600;\\n  font-style: normal;\\n} */\\n\\nbody {\\n  /* font-family: 'MyFont'; */\\n  margin: 0;\\n  background: #333;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}