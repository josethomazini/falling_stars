{"version":3,"sources":["webpack:///./src/style.css?7163","webpack:///./src/core/Consts.js","webpack:///./src/preload/AssetsLoader.js","webpack:///./src/preload/event-handler/AssetText.js","webpack:///./src/preload/event-handler/LoadingText.js","webpack:///./src/preload/event-handler/PercentText.js","webpack:///./src/preload/event-handler/ProgressBar.js","webpack:///./src/preload/event-handler/ProgressBox.js","webpack:///./src/preload/event-handler/index.js","webpack:///./src/preload/index.js","webpack:///./src/stage/entities/Background.js","webpack:///./src/stage/entities/BombSpawner.js","webpack:///./src/stage/rules/State.js","webpack:///./src/stage/Consts.js","webpack:///./src/stage/rules/CollisionRules.js","webpack:///./src/stage/entities/dude/DudeAnimations.js","webpack:///./src/stage/entities/dude/index.js","webpack:///./src/stage/entities/score/MaxScoreLabel.js","webpack:///./src/stage/entities/score/MaxScoreManager.js","webpack:///./src/stage/entities/PlatformGroup.js","webpack:///./src/stage/rules/PlayerControl.js","webpack:///./src/stage/entities/score/ScoreLabel.js","webpack:///./src/stage/entities/StarGroup.js","webpack:///./src/core/Sound.js","webpack:///./src/stage/SoundManager.js","webpack:///./src/stage/entities/GameOverMessage.js","webpack:///./src/stage/index.js","webpack:///./src/main.js","webpack:///./src/style.css"],"names":["KEY","SCENE","AssetsLoader","scene","this","loadImages","loadSprites","loadSounds","load","image","sky","platform","star","bomb","spritesheet","dude","frameWidth","frameHeight","audio","epicBattle","bombExplode","deathScream","jump","collectCoin","AssertText","cameras","main","config","x","width","y","height","text","style","font","fill","make","setOrigin","file","txt","key","setText","destroy","LoadingText","PercentText","value","parseInt","ProgressBar","bar","add","graphics","clear","fillStyle","fillRect","ProgressBox","box","EventHandler","progressBar","progressBox","loadingText","percentText","assetText","on","progressed","fileProgressed","completed","PreloadScene","start","Phaser","Background","BombSpawner","group","physics","playerX","create","setBounce","setCollideWorldBounds","setVelocity","gameOver","CollisionRules","platforms","stars","bombSpawner","scoreLabel","soundManager","gameOverMessage","cursors","input","keyboard","createCursorKeys","collider","dudeHitsBomb","overlap","dudeCollectsStar","bombHitsBomb","showTexts","play","background","setVolume","pause","anims","DUDE_ANIM","State","bomb1","bomb2","disableBody","dudeY","starY","up","isDown","jumpOver","countActive","children","iterate","child","enableBody","spawn","DudeAnimations","right","left","idle","dead","frames","frame","frameRate","generateFrameNumbers","end","repeat","Dude","existing","MaxScoreLabel","fontSize","MaxScoreManager","maxScoreLabel","maxScore","localStorage","getItem","setScore","score","setItem","PlatformGroup","staticGroup","setScale","refreshBody","PlayerControl","restart","moveLeft","moveRight","body","touching","down","setVelocityX","setVelocityY","ScoreLabel","maxScoreManager","currentScoreChangedTo","points","updatedScore","StarGroup","setXY","stepX","random","setBounceY","Sound","loop","volume","sound","SoundManager","instance","GameOverMessage","gameOverText","makeGameOverText","hitSpaceText","makeHitSpaceText","visible","StageScene","playerControl","update","type","scale","mode","autoCenter","default","arcade","gravity","___CSS_LOADER_EXPORT___","push","module","id"],"mappings":"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","file":"index.2e25a1df482fc117bb54.js","sourcesContent":["import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","export const KEY = {\n  sky: 'sky',\n  platform: 'platform',\n  star: 'star',\n  bomb: 'bomb',\n  dude: 'dude',\n  epicBattle: 'epicBattle',\n  bombExplode: 'bombExplode',\n  deathScream: 'deathScream',\n  jump: 'jump',\n  collectCoin: 'collectCoin',\n};\n\nexport const SCENE = {\n  preload: 'preload',\n  stage: 'scene',\n};\n","import { KEY } from '../core/Consts';\n\nimport bomb from './assets/bomb.png';\nimport dude from './assets/dude.png';\nimport platform from './assets/platform.png';\nimport sky from './assets/sky.png';\nimport star from './assets/star.png';\nimport epicBattle from './assets/Twin Musicom - Epic Battle.mp3';\nimport bombExplode from './assets/155235__zangrutz__bomb-small.mp3';\nimport deathScream from './assets/348310__redafs__zombie-monster-scream.wav';\nimport jump from './assets/369515__lefty-studios__jumping-sfx.wav';\nimport collectCoin from './assets/135936__bradwesson__collectcoin.wav';\n\nexport default class AssetsLoader {\n  constructor(scene) {\n    this.scene = scene;\n\n    this.loadImages();\n    this.loadSprites();\n    this.loadSounds();\n  }\n\n  loadImages() {\n    this.scene.load.image(KEY.sky, sky);\n    this.scene.load.image(KEY.platform, platform);\n    this.scene.load.image(KEY.star, star);\n    this.scene.load.image(KEY.bomb, bomb);\n  }\n\n  loadSprites() {\n    this.scene.load.spritesheet(\n      KEY.dude, dude,\n      {\n        frameWidth: 32,\n        frameHeight: 39,\n      },\n    );\n  }\n\n  loadSounds() {\n    this.scene.load.audio(KEY.epicBattle, epicBattle);\n    this.scene.load.audio(KEY.bombExplode, bombExplode);\n    this.scene.load.audio(KEY.deathScream, deathScream);\n    this.scene.load.audio(KEY.jump, jump);\n    this.scene.load.audio(KEY.collectCoin, collectCoin);\n  }\n}\n","export default class AssertText {\n  constructor(scene) {\n    const { width, height } = scene.cameras.main;\n\n    const config = {\n      x: width / 2,\n      y: height / 2 + 50,\n      text: '',\n      style: {\n        font: '18px monospace',\n        fill: '#ffffff',\n      },\n    };\n\n    this.text = scene.make.text(config);\n    this.text.setOrigin(0.5, 0.5);\n  }\n\n  fileProgressed(file) {\n    const txt = `Loading asset: ${file.key}`;\n    this.text.setText(txt);\n  }\n\n  completed() {\n    this.text.destroy();\n  }\n}\n","export default class LoadingText {\n  constructor(scene) {\n    const { width, height } = scene.cameras.main;\n\n    const config = {\n      x: width / 2,\n      y: height / 2 - 50,\n      text: 'Loading...',\n      style: {\n        font: '20px monospace',\n        fill: '#ffffff',\n      },\n    };\n\n    this.text = scene.make.text(config);\n    this.text.setOrigin(0.5, 0.5);\n  }\n\n  completed() {\n    this.text.destroy();\n  }\n}\n","export default class PercentText {\n  constructor(scene) {\n    const { width, height } = scene.cameras.main;\n\n    const config = {\n      x: width / 2,\n      y: height / 2 - 5,\n      text: '0%',\n      style: {\n        font: '18px monospace',\n        fill: '#ffffff',\n      },\n    };\n\n    this.text = scene.make.text(config);\n    this.text.setOrigin(0.5, 0.5);\n  }\n\n  progressed(value) {\n    const txt = `${parseInt(value * 100, 10)}%`;\n    this.text.setText(txt);\n  }\n\n  completed() {\n    this.text.destroy();\n  }\n}\n","export default class ProgressBar {\n  constructor(scene) {\n    this.bar = scene.add.graphics();\n  }\n\n  progressed(value) {\n    this.bar.clear();\n    this.bar.fillStyle(0xffffff, 1);\n    this.bar.fillRect(250, 280, 300 * value, 30);\n  }\n\n  completed() {\n    this.bar.destroy();\n  }\n}\n","export default class ProgressBox {\n  constructor(scene) {\n    this.box = scene.add.graphics();\n    this.box.fillStyle(0x222222, 0.8);\n    this.box.fillRect(240, 270, 320, 50);\n  }\n\n  completed() {\n    this.box.destroy();\n  }\n}\n","import AssertText from './AssetText';\nimport LoadingText from './LoadingText';\nimport PercentText from './PercentText';\nimport ProgressBar from './ProgressBar';\nimport ProgressBox from './ProgressBox';\n\nexport default class EventHandler {\n  constructor(scene) {\n    const progressBar = new ProgressBar(scene);\n    const progressBox = new ProgressBox(scene);\n    const loadingText = new LoadingText(scene);\n    const percentText = new PercentText(scene);\n    const assetText = new AssertText(scene);\n\n    scene.load.on('progress', (value) => {\n      percentText.progressed(value);\n      progressBar.progressed(value);\n    });\n\n    scene.load.on('fileprogress', (file) => {\n      assetText.fileProgressed(file);\n    });\n\n    scene.load.on('complete', () => {\n      progressBar.completed();\n      progressBox.completed();\n      loadingText.completed();\n      percentText.completed();\n      assetText.completed();\n    });\n  }\n}\n","import Phaser from 'phaser';\n\nimport AssetsLoader from './AssetsLoader';\nimport EventHandler from './event-handler';\nimport { SCENE } from '../core/Consts';\n\nexport default class PreloadScene extends Phaser.Scene {\n  constructor() {\n    super(SCENE.preload);\n  }\n\n  preload() {\n    new EventHandler(this);\n    new AssetsLoader(this);\n  }\n\n  create() {\n    this.scene.start(SCENE.stage);\n  }\n}\n","import { KEY } from '../../core/Consts';\n\nexport default class Background {\n  constructor(scene) {\n    scene.add.image(400, 300, KEY.sky);\n  }\n}\n","import Phaser from 'phaser';\n\nimport { KEY } from '../../core/Consts';\n\nexport default class BombSpawner {\n  constructor(scene) {\n    this.group = scene.physics.add.group();\n  }\n\n  spawn(playerX) {\n    const x = (playerX < 400)\n      ? Phaser.Math.Between(400, 800)\n      : Phaser.Math.Between(0, 400);\n\n    const bomb = this.group.create(x, 16, KEY.bomb);\n    bomb.setBounce(1);\n    bomb.setCollideWorldBounds(true);\n    bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\n  }\n}\n","export default {\n  gameOver: false,\n};\n","const DUDE_ANIM = {\n  left: 'left',\n  right: 'right',\n  idle: 'idle',\n  dead: 'dead',\n};\n\nexport default DUDE_ANIM;\n","import State from './State';\nimport DUDE_ANIM from '../Consts';\n\nexport default class CollisionRules {\n  constructor(\n    scene, dude, platforms, stars, bombSpawner,\n    scoreLabel, soundManager, gameOverMessage,\n  ) {\n    this.bombSpawner = bombSpawner;\n    this.scoreLabel = scoreLabel;\n    this.soundManager = soundManager;\n    this.gameOverMessage = gameOverMessage;\n\n    this.stars = stars;\n    this.scene = scene;\n\n    this.cursors = scene.input.keyboard.createCursorKeys();\n\n    this.scene.physics.add.collider(dude, platforms.group);\n    this.scene.physics.add.collider(this.stars.group, platforms.group);\n    this.scene.physics.add.collider(bombSpawner.group, platforms.group);\n\n    this.scene.physics.add.collider(\n      dude, this.bombSpawner.group,\n      this.dudeHitsBomb, null, this,\n    );\n\n    this.scene.physics.add.overlap(\n      dude, stars.group,\n      this.dudeCollectsStar, null, this,\n    );\n\n    this.scene.physics.add.collider(\n      this.bombSpawner.group, this.bombSpawner.group,\n      this.bombHitsBomb, null, this,\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  dudeHitsBomb(dude, bomb) {\n    this.gameOverMessage.showTexts();\n\n    this.soundManager.bombExplode.play();\n    this.soundManager.deathScream.play();\n    this.soundManager.background.setVolume(0.5);\n    this.scene.physics.pause();\n\n    dude.anims.play(DUDE_ANIM.dead);\n\n    State.gameOver = true;\n  }\n\n  bombHitsBomb(bomb1, bomb2) {\n    this.soundManager.bombExplode.play();\n    bomb1.disableBody(true, true);\n    bomb2.disableBody(true, true);\n  }\n\n  jumpOver(dude, star) {\n    const dudeY = dude.y + dude.height / 2;\n    const starY = star.y + star.height / 2;\n\n    return this.cursors.up.isDown && dudeY < starY;\n  }\n\n  dudeCollectsStar(dude, star) {\n    this.soundManager.collectCoin.play();\n    star.disableBody(true, true);\n\n    if (this.jumpOver(dude, star) === true) {\n      // som legal\n      this.scoreLabel.add(50);\n    } else {\n      this.scoreLabel.add(10);\n    }\n\n    if (this.stars.group.countActive(true) === 0) {\n      //  A new batch of stars to collect\n      this.stars.group.children.iterate((child) => {\n        child.enableBody(true, child.x, 0, true, true);\n      });\n    }\n\n    this.bombSpawner.spawn(dude.x);\n  }\n}\n","import { KEY } from '../../../core/Consts';\nimport DUDE_ANIM from '../../Consts';\n\nexport default class DudeAnimations {\n  constructor(scene) {\n    this.scene = scene;\n\n    this.right();\n    this.left();\n    this.idle();\n    this.dead();\n  }\n\n  dead() {\n    const config = {\n      key: DUDE_ANIM.dead,\n      frames: [{ key: KEY.dude, frame: 9 }],\n      frameRate: 20,\n    };\n\n    this.scene.anims.create(config);\n  }\n\n  idle() {\n    const config = {\n      key: DUDE_ANIM.idle,\n      frames: [{ key: KEY.dude, frame: 4 }],\n      frameRate: 20,\n    };\n\n    this.scene.anims.create(config);\n  }\n\n  right() {\n    const config = {\n      key: DUDE_ANIM.right,\n      frames: this.scene.anims.generateFrameNumbers(\n        KEY.dude, { start: 5, end: 8 },\n      ),\n      frameRate: 10,\n      repeat: -1,\n    };\n\n    this.scene.anims.create(config);\n  }\n\n  left() {\n    const config = {\n      key: DUDE_ANIM.left,\n      frames: this.scene.anims.generateFrameNumbers(\n        KEY.dude, { start: 0, end: 3 },\n      ),\n      frameRate: 10,\n      repeat: -1,\n    };\n\n    this.scene.anims.create(config);\n  }\n}\n","import Phaser from 'phaser';\n\nimport DudeAnimations from './DudeAnimations';\nimport { KEY } from '../../../core/Consts';\n\nexport default class Dude extends Phaser.Physics.Arcade.Sprite {\n  constructor(scene) {\n    super(scene, 100, 450, KEY.dude);\n\n    scene.add.existing(this);\n    scene.physics.add.existing(this);\n\n    this.setBounce(0.2);\n    this.setCollideWorldBounds(true);\n\n    new DudeAnimations(scene);\n  }\n}\n","export default class MaxScoreLabel {\n  constructor(scene) {\n    const { width } = scene.cameras.main;\n\n    const config = {\n      x: width - 25,\n      y: 16,\n      text: '',\n      style: {\n        fontSize: '25px',\n        fill: '#000',\n      },\n    };\n\n    this.text = scene.make.text(config);\n    this.text.setOrigin(1, 0);\n  }\n\n  setScore(value) {\n    this.value = value;\n    const txt = `Max Score: ${this.value}`;\n    this.text.setText(txt);\n  }\n}\n","export default class MaxScoreManager {\n  constructor(maxScoreLabel) {\n    this.key = 'falling_stars::max_score';\n    this.maxScore = localStorage.getItem(this.key) || 0;\n    this.maxScoreLabel = maxScoreLabel;\n\n    this.maxScoreLabel.setScore(this.maxScore);\n  }\n\n  currentScoreChangedTo(score) {\n    if (score > this.maxScore) {\n      localStorage.setItem(this.key, score);\n      this.maxScoreLabel.setScore(score);\n    }\n  }\n}\n","import { KEY } from '../../core/Consts';\n\nexport default class PlatformGroup {\n  constructor(scene) {\n    this.group = scene.physics.add.staticGroup();\n\n    this.group.create(400, 568, KEY.platform).setScale(2).refreshBody();\n\n    this.group.create(600, 400, KEY.platform);\n    this.group.create(50, 250, KEY.platform);\n    this.group.create(750, 220, KEY.platform);\n  }\n}\n","import State from './State';\nimport { SCENE } from '../../core/Consts';\nimport DUDE_ANIM from '../Consts';\n\nexport default class PlayerControl {\n  constructor(scene, dude, soundManager) {\n    this.scene = scene;\n    this.dude = dude;\n    this.soundManager = soundManager;\n\n    this.cursors = scene.input.keyboard.createCursorKeys();\n    this.scene.input.keyboard.on('keydown-SPACE', this.restart, this);\n  }\n\n  update() {\n    if (this.cursors.left.isDown) {\n      this.moveLeft();\n    } else if (this.cursors.right.isDown) {\n      this.moveRight();\n    } else {\n      this.idle();\n    }\n    if (this.cursors.up.isDown && this.dude.body.touching.down) {\n      this.jump();\n    }\n  }\n\n  restart() {\n    if (State.gameOver) {\n      this.soundManager.background.setVolume(1);\n      this.scene.scene.start(SCENE.stage);\n    }\n  }\n\n  moveLeft() {\n    this.dude.setVelocityX(-160);\n    this.dude.anims.play(DUDE_ANIM.left, true);\n  }\n\n  moveRight() {\n    this.dude.setVelocityX(160);\n    this.dude.anims.play(DUDE_ANIM.right, true);\n  }\n\n  jump() {\n    this.soundManager.jump.play();\n    this.dude.setVelocityY(-330);\n  }\n\n  idle() {\n    this.dude.setVelocityX(0);\n    this.dude.anims.play(DUDE_ANIM.idle);\n  }\n}\n","export default class ScoreLabel {\n  constructor(scene, maxScoreManager) {\n    this.maxScoreManager = maxScoreManager;\n\n    const config = {\n      x: 25,\n      y: 16,\n      text: '',\n      style: {\n        fontSize: '25px',\n        fill: '#000',\n      },\n    };\n\n    this.text = scene.make.text(config);\n    this.text.setOrigin(0, 0);\n\n    this.setScore(0);\n  }\n\n  setScore(value) {\n    this.value = value;\n    const txt = `Score: ${this.value}`;\n    this.text.setText(txt);\n    this.maxScoreManager.currentScoreChangedTo(value);\n  }\n\n  add(points) {\n    const updatedScore = this.value + points;\n    this.setScore(updatedScore);\n  }\n}\n","import Phaser from 'phaser';\n\nimport { KEY } from '../../core/Consts';\n\nexport default class StarGroup {\n  constructor(scene) {\n    const config = {\n      key: KEY.star,\n      repeat: 11,\n      setXY: { x: 12, y: 0, stepX: 70 },\n    };\n\n    this.group = scene.physics.add.group(config);\n\n    this.group.children.iterate((child) => {\n      const random = Phaser.Math.FloatBetween(0.4, 0.8);\n      child.setBounceY(random);\n    });\n  }\n}\n","export default class Sound {\n  constructor(scene, key, loop) {\n    const config = {\n      volume: 1,\n      loop,\n    };\n    this.audio = scene.sound.add(key, config);\n  }\n\n  play() {\n    this.audio.play();\n  }\n\n  setVolume(value) {\n    this.audio.setVolume(value);\n  }\n}\n","import { KEY } from '../core/Consts';\nimport Sound from '../core/Sound';\n\nclass SoundManager {\n  constructor(scene) {\n    this.background = new Sound(scene, KEY.epicBattle, true);\n    this.bombExplode = new Sound(scene, KEY.bombExplode, false);\n    this.deathScream = new Sound(scene, KEY.deathScream, false);\n    this.jump = new Sound(scene, KEY.jump, false);\n    this.collectCoin = new Sound(scene, KEY.collectCoin, false);\n\n    this.background.play();\n  }\n}\n\nexport default (() => {\n  let instance = null;\n\n  return (scene) => {\n    if (instance == null) {\n      instance = new SoundManager(scene);\n    }\n    return instance;\n  };\n})();\n","export default class GameOverMessage {\n  constructor(scene) {\n    this.scene = scene;\n\n    this.gameOverText = this.makeGameOverText();\n    this.hitSpaceText = this.makeHitSpaceText();\n\n    this.gameOverText.visible = false;\n    this.hitSpaceText.visible = false;\n  }\n\n  makeHitSpaceText() {\n    const { width, height } = this.scene.cameras.main;\n\n    const config = {\n      x: width / 2,\n      y: height / 2,\n      text: 'Hit space to continue',\n      style: {\n        fontSize: '46px',\n        fill: '#f00',\n      },\n    };\n\n    const text = this.scene.make.text(config);\n    text.setOrigin(0.5, 0.5);\n\n    return text;\n  }\n\n  makeGameOverText() {\n    const { width, height } = this.scene.cameras.main;\n\n    const config = {\n      x: width / 2,\n      y: height / 4,\n      text: 'GAME OVER',\n      style: {\n        fontSize: '65px',\n        fill: '#f00',\n      },\n    };\n\n    const text = this.scene.make.text(config);\n    text.setOrigin(0.5, 0.5);\n\n    return text;\n  }\n\n  showTexts() {\n    this.gameOverText.visible = true;\n    this.hitSpaceText.visible = true;\n  }\n}\n","import Phaser from 'phaser';\n\nimport Background from './entities/Background';\nimport BombSpawner from './entities/BombSpawner';\nimport CollisionRules from './rules/CollisionRules';\nimport Dude from './entities/dude';\nimport MaxScoreLabel from './entities/score/MaxScoreLabel';\nimport MaxScoreManager from './entities/score/MaxScoreManager';\nimport PlatformGroup from './entities/PlatformGroup';\nimport PlayerControl from './rules/PlayerControl';\nimport ScoreLabel from './entities/score/ScoreLabel';\nimport StarGroup from './entities/StarGroup';\nimport State from './rules/State';\nimport SoundManager from './SoundManager';\nimport { SCENE } from '../core/Consts';\nimport GameOverMessage from './entities/GameOverMessage';\n\nexport default class StageScene extends Phaser.Scene {\n  constructor() {\n    super(SCENE.stage);\n  }\n\n  create() {\n    State.gameOver = false;\n\n    const soundManager = SoundManager(this);\n    new Background(this);\n    const dude = new Dude(this);\n    const platforms = new PlatformGroup(this);\n    const stars = new StarGroup(this);\n    const bombSpawner = new BombSpawner(this);\n    const maxScoreLabel = new MaxScoreLabel(this);\n    const maxScoreManager = new MaxScoreManager(maxScoreLabel);\n    const scoreLabel = new ScoreLabel(this, maxScoreManager);\n    const gameOverMessage = new GameOverMessage(this);\n\n    this.playerControl = new PlayerControl(this, dude, soundManager);\n    new CollisionRules(\n      this, dude, platforms, stars, bombSpawner,\n      scoreLabel, soundManager, gameOverMessage,\n    );\n  }\n\n  update() {\n    if (State.gameOver) {\n      return;\n    }\n\n    this.playerControl.update();\n  }\n}\n","import Phaser from 'phaser';\n\nimport './style.css';\n\nimport PreloadScene from './preload';\nimport StageScene from './stage';\n\nconst config = {\n  type: Phaser.CANVAS,\n  width: 800,\n  height: 600,\n  scale: {\n    mode: Phaser.Scale.FIT,\n    autoCenter: Phaser.Scale.CENTER_BOTH,\n  },\n  physics: {\n    default: 'arcade',\n    arcade: {\n      // debug: true,\n      gravity: {\n        y: 300,\n      },\n    },\n  },\n  scene: [\n    PreloadScene,\n    StageScene,\n  ],\n};\n\nexport default new Phaser.Game(config);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* @font-face {\\n  font-family: 'MyFont';\\n  src: url('./my-font.woff2') format('woff2'),\\n    url('./my-font.woff') format('woff');\\n  font-weight: 600;\\n  font-style: normal;\\n} */\\n\\nbody {\\n  /* font-family: 'MyFont'; */\\n  margin: 0;\\n  background: #333;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;GAMG;;AAEH;EACE,2BAA2B;EAC3B,SAAS;EACT,gBAAgB;AAClB\",\"sourcesContent\":[\"/* @font-face {\\n  font-family: 'MyFont';\\n  src: url('./my-font.woff2') format('woff2'),\\n    url('./my-font.woff') format('woff');\\n  font-weight: 600;\\n  font-style: normal;\\n} */\\n\\nbody {\\n  /* font-family: 'MyFont'; */\\n  margin: 0;\\n  background: #333;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}